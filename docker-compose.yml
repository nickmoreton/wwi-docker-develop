version: '3.9'

services:

  wagtail:
    build: .
    volumes:
      - ./cms:/app/cms # wagtail app
      - ./log:/app/log # import logs
      - ./pyproject.toml:/app/pyproject.toml # poetry
      - ./poetry.lock:/app/poetry.lock # poetry
      - ./setup.cfg:/app/setup.cfg # linting
      - ./wagtail-wordpress-import:/app/wagtail-wordpress-import # the package
      - ./xml:/app/xml # imported and exported xml files
    ports:
      - "8000:8000"
    command: python cms/manage.py runserver 0.0.0.0:8000
    depends_on:
      psqldb:
        condition: service_healthy
    environment:
      - PSQL_HOST=psqldb
      - PSQL_DATABASE=postgres
      - PSQL_USER=postgres
      - PSQL_PASSWORD=password
      - PSQL_PORT=5432

  psqldb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - psqldb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  wordpress:
    image: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysqldb
      WORDPRESS_DB_USER: user
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_NAME: wordpressdb
    ports:
      - "8080:80"
    volumes:
      # - ./wordpress:/var/www/html # un-comment to show the WordPress files locally
      - ./xml:/xml:rw # WordPress XML files shared from the container
    depends_on:
      mysqldb:
        condition: service_healthy

  mysqldb:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wordpressdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - mysqldb:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mysqldb:
  psqldb: