# Generated by Django 4.1.2 on 2022-10-29 07:52

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailimages", "0024_index_image_file_hash"),
        ("wagtailcore", "0077_alter_revision_user"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255)),
                ("last_name", models.CharField(blank=True, max_length=255)),
                ("email_address", models.EmailField(max_length=254)),
            ],
            options={
                "verbose_name": "author",
                "verbose_name_plural": "authors",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
            },
        ),
        migrations.CreateModel(
            name="PostPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("wp_post_id", models.IntegerField(blank=True, null=True)),
                (
                    "wp_post_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("wp_link", models.TextField(blank=True, null=True)),
                ("wp_raw_content", models.TextField(blank=True, null=True)),
                ("wp_processed_content", models.TextField(blank=True, null=True)),
                ("wp_block_json", models.TextField(blank=True, null=True)),
                ("wp_normalized_styles", models.TextField(blank=True, null=True)),
                ("wp_post_meta", models.JSONField(blank=True, null=True)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("rich_text", wagtail.blocks.RichTextBlock()),
                            (
                                "heading",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.CharBlock(
                                                form_classname="title"
                                            ),
                                        ),
                                        (
                                            "importance",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h1", "H1"),
                                                    ("h2", "H2"),
                                                    ("h3", "H3"),
                                                    ("h4", "H4"),
                                                    ("h5", "H5"),
                                                    ("h6", "H6"),
                                                ]
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.URLBlock(required=False),
                                        ),
                                        (
                                            "alignment",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("left", "Left"),
                                                    ("right", "Right"),
                                                    ("center", "Center"),
                                                ]
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "block_quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.blocks.CharBlock(
                                                form_classname="title"
                                            ),
                                        ),
                                        (
                                            "attribution",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ]
                                ),
                            ),
                            ("raw_html", wagtail.blocks.RawHTMLBlock()),
                        ],
                        use_json_field=True,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pages.author",
                    ),
                ),
                (
                    "categories",
                    modelcluster.fields.ParentalManyToManyField(
                        blank=True, to="pages.category"
                    ),
                ),
                (
                    "header_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
